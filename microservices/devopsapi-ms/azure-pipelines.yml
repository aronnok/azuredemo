# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- devopsapi

pool:
  vmImage: 'ubuntu-latest'


variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '{{ containerRegistryConnection.Id }}'
  imageRepository: '{{#toAlphaNumericString imageRepository 50}}{{/toAlphaNumericString}}'
  containerRegistry: '{{ containerRegistryConnection.Authorization.Parameters.loginServer }}'
  dockerfilePath: '{{ dockerfilePath }}'
  tag: '$(Build.BuildId)'
  azureSubscription: 'demo2 - Service Endpoint'
  resourceGroupName: 'DefaultResourceGroup-EUS'
  kubernetesCluster: 'demo2'
  k8sNamespace: default
  azureResourceGroup: DefaultResourceGroup-EUS
  azureSubscriptionEndpoint: 'demo2 - Service Endpoint'


steps:

- task: AzureResourceGroupDeployment@2
  displayName: 'Azure Deployment:Create Azure Container Registry'
  inputs:
    azureSubscription: 'demo2 - Service Endpoint'
    resourceGroupName: 'DefaultResourceGroup-EUS'
    location: eastus
    templateLocation: 'URL of the file'
    csmFileLink: 'https://raw.githubusercontent.com/Microsoft/devops-project-samples/057f6cc268a62922d012067d069d58684e967d0a/armtemplates/webapp-containers/containerRegistry-template.json'
    overrideParameters: '-registryName "palebluedotstardust" -registryLocation "East US" -registrySku "Standard"'

- task: Kubernetes@1
  displayName: kubectl delete devopsapi-ms
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureResourceGroup: $(azureResourceGroup)
    kubernetesCluster: $(kubernetesCluster)
    command: delete
    arguments: deployment devops-api-ms

- task: Kubernetes@1
  displayName: kubectl deploy devops-ops-api
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureResourceGroup: $(azureResourceGroup)
    kubernetesCluster: $(kubernetesCluster)
    command: apply
    arguments: deployment -f devops-api-ms.yml